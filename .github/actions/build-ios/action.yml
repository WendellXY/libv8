name: Build for iOS
description: "Build V8 for iOS"

inputs:
  archive-name:
    description: "Base name of the archive to create"
    default: v8_iOS
    required: false
    type: string
  build-certificate-base64:
    description: "Base64 encoded build certificate"
    required: true
    type: string
  p12-password:
    description: "Password for the P12 certificate"
    required: true
    type: string
  keychain-password:
    description: "Password for the keychain"
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - name: Restore CCache
      uses: actions/cache@v3
      with:
        path: .ccache
        key: ${{ runner.os }}:libv8:ccache:${{ github.run_number }}
        restore-keys: |
          ${{ runner.os }}:libv8:ccache:

    - name: Install the Apple certificate
      shell: bash
      run: |
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        echo -n "${{ inputs.build-certificate-base64 }}" | base64 --decode -o $CERTIFICATE_PATH

        security create-keychain -p "${{ inputs.keychain-password }}" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "${{ inputs.keychain-password }}" $KEYCHAIN_PATH

        security import $CERTIFICATE_PATH -P "${{ inputs.p12-password }}" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security set-key-partition-list -S apple-tool:,apple: -k "${{ inputs.keychain-password }}" $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

    - name: Setup Python 2.7
      uses: MatteoH2O1999/setup-python@v2
      with:
        python-version: "2.7"

    - name: Setup Build Tools
      shell: bash
      run: |
        brew install nutcracker/tap/openssl@1.0
        brew install ninja ccache

        echo "$(brew --prefix ccache)/libexec" >> "$GITHUB_PATH"
        echo "CCACHE_CPP2=yes" >> "$GITHUB_ENV"
        echo "CCACHE_SLOPPINESS=time_macros" >> "$GITHUB_ENV"

        ccacheDir="${GITHUB_WORKSPACE}/.ccache"
        test -d "$ccacheDir" || mkdir "$ccacheDir"

        echo "CCACHE_DIR=$ccacheDir" >> "$GITHUB_ENV"

    - name: Download V8 Source
      shell: bash
      run: ./v8_download.sh

    - name: Compile V8
      shell: bash
      run: ./v8_compile.sh "iOS"

    - name: Show CCache Status
      shell: bash
      run: ccache -s

    - name: Test V8
      continue-on-error: true
      shell: bash
      run: ./v8_test.sh

    - name: Archive V8
      shell: bash
      run: ./archive.sh ${{ inputs.archive-name }}
